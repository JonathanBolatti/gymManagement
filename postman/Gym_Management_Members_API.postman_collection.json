{
	"info": {
		"_postman_id": "gym-management-api",
		"name": "üèãÔ∏è Gym Management - Complete API with JWT",
		"description": "Colecci√≥n completa de endpoints para el sistema de gesti√≥n de gimnasio con autenticaci√≥n JWT.\n\n**Base URL:** http://localhost:8080\n\n**Funcionalidades incluidas:**\n- üîê **Autenticaci√≥n JWT** (Login, Register, Refresh, Validate)\n- ‚úÖ CRUD completo de miembros (clientes)\n- ‚úÖ CRUD completo de usuarios (empleados/administradores)\n- ‚úÖ B√∫squeda y filtrado\n- ‚úÖ Gesti√≥n de roles (ADMIN, MANAGER, RECEPTIONIST)\n- ‚úÖ Estad√≠sticas y monitoreo\n- ‚úÖ Health check\n\n**Entidades:**\n- **Auth:** Autenticaci√≥n y autorizaci√≥n JWT\n- **Members:** Clientes del gimnasio\n- **Users:** Empleados y administradores del sistema\n\n**Creado para:** Sistema de Gesti√≥n de Gimnasio - Backend",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "üîê Auth JWT (Autenticaci√≥n)",
			"item": [
				{
					"name": "üè• Health Check Auth",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/auth/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"health"
							]
						},
						"description": "Verificar que el servicio de autenticaci√≥n est√© funcionando correctamente."
					},
					"response": []
				},
				{
					"name": "üîë Login (JSON)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"admin\",\n  \"password\": \"admin123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Autenticar usuario y obtener token JWT. Usa JSON en el body."
					},
					"response": []
				},
				{
					"name": "üîë Login (Form Data)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "admin",
									"type": "text"
								},
								{
									"key": "password",
									"value": "admin123",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login-form",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login-form"
							]
						},
						"description": "Login usando form-data para compatibilidad y testing."
					},
					"response": []
				},
				{
					"name": "üìù Register (Crear Usuario)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"newuser\",\n  \"email\": \"newuser@gym.com\",\n  \"password\": \"password123\",\n  \"firstName\": \"Nuevo\",\n  \"lastName\": \"Usuario\",\n  \"phone\": \"+56987654321\",\n  \"role\": \"RECEPTIONIST\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Registrar un nuevo usuario en el sistema y obtener token JWT."
					},
					"response": []
				},
				{
					"name": "üîÑ Refresh Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"YOUR_REFRESH_TOKEN_HERE\""
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"refresh"
							]
						},
						"description": "Renovar el access token usando el refresh token."
					},
					"response": []
				},
				{
					"name": "‚úÖ Validate Token (JSON)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"YOUR_JWT_TOKEN_HERE\""
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/validate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"validate"
							]
						},
						"description": "Validar si un token JWT es v√°lido. Usa JSON en el body."
					},
					"response": []
				},
				{
					"name": "‚úÖ Validate Token (Form Data)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "token",
									"value": "YOUR_JWT_TOKEN_HERE",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/validate-form",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"validate-form"
							]
						},
						"description": "Validar token usando form-data para compatibilidad."
					},
					"response": []
				},
				{
					"name": "üîê Encrypt Passwords",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/auth/encrypt-passwords",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"encrypt-passwords"
							]
						},
						"description": "Encriptar contrase√±as existentes en la base de datos (solo para migraci√≥n)."
					},
					"response": []
				}
			]
		},
		{
			"name": "üë• Members CRUD (Clientes)",
			"item": [
				{
					"name": "‚ûï Crear Miembro",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"Juan Carlos\",\n  \"lastName\": \"P√©rez Gonz√°lez\",\n  \"email\": \"juan.perez@email.com\",\n  \"phone\": \"+56987654321\",\n  \"birthDate\": \"1990-05-15\",\n  \"gender\": \"M\",\n  \"height\": 1.75,\n  \"weight\": 75.5,\n  \"emergencyContact\": \"Mar√≠a P√©rez\",\n  \"emergencyPhone\": \"+56987654322\",\n  \"observations\": \"Interesado en entrenamiento funcional\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"members"
							]
						},
						"description": "Crear un nuevo miembro en el gimnasio.\n\n**Campos obligatorios:**\n- firstName, lastName, email, phone, birthDate, gender\n\n**Campos opcionales:**\n- height, weight, emergencyContact, emergencyPhone, observations"
					},
					"response": []
				},
				{
					"name": "üìã Obtener Todos los Miembros",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/members?page=0&size=10&sortBy=firstName&sortDirection=asc",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"members"
							],
							"query": [
								{
									"key": "page",
									"value": "0",
									"description": "N√∫mero de p√°gina (inicia en 0)"
								},
								{
									"key": "size",
									"value": "10",
									"description": "Cantidad de elementos por p√°gina"
								},
								{
									"key": "sortBy",
									"value": "firstName",
									"description": "Campo para ordenar (firstName, lastName, email, createdAt)"
								},
								{
									"key": "sortDirection",
									"value": "asc",
									"description": "Direcci√≥n del ordenamiento (asc, desc)"
								}
							]
						},
						"description": "Obtener lista paginada de todos los miembros.\n\n**Par√°metros de consulta:**\n- **page:** N√∫mero de p√°gina (default: 0)\n- **size:** Elementos por p√°gina (default: 10)\n- **sortBy:** Campo de ordenamiento (default: firstName)\n- **sortDirection:** asc o desc (default: asc)"
					},
					"response": []
				},
				{
					"name": "üë§ Obtener Miembro por ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/members/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"members",
								"1"
							]
						},
						"description": "Obtener informaci√≥n detallada de un miembro espec√≠fico por su ID.\n\n**Par√°metros:**\n- **id:** ID √∫nico del miembro"
					},
					"response": []
				},
				{
					"name": "‚úèÔ∏è Actualizar Miembro",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"Juan Carlos\",\n  \"lastName\": \"P√©rez Gonz√°lez\",\n  \"email\": \"juan.perez.updated@email.com\",\n  \"phone\": \"+56987654321\",\n  \"birthDate\": \"1990-05-15\",\n  \"gender\": \"M\",\n  \"height\": 1.76,\n  \"weight\": 76.0,\n  \"emergencyContact\": \"Mar√≠a P√©rez\",\n  \"emergencyPhone\": \"+56987654322\",\n  \"isActive\": true,\n  \"observations\": \"Actualizado - Entrenamiento funcional avanzado\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/members/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"members",
								"1"
							]
						},
						"description": "Actualizar informaci√≥n de un miembro existente.\n\n**Nota:** Solo se actualizan los campos enviados (actualizaci√≥n parcial).\n\n**Par√°metros:**\n- **id:** ID del miembro a actualizar"
					},
					"response": []
				},
				{
					"name": "üóëÔ∏è Eliminar Miembro (Borrado L√≥gico)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/members/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"members",
								"1"
							]
						},
						"description": "Eliminar un miembro (borrado l√≥gico).\n\nEsto desactiva al miembro (isActive = false) en lugar de eliminarlo f√≠sicamente de la base de datos.\n\n**Par√°metros:**\n- **id:** ID del miembro a eliminar"
					},
					"response": []
				}
			],
			"description": "Operaciones CRUD b√°sicas para la gesti√≥n de miembros (clientes del gimnasio)",
			"event": []
		},
		{
			"name": "üë®‚Äçüíº Users CRUD (Empleados/Administradores)",
			"item": [
				{
					"name": "‚ûï Crear Usuario",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"test.user\",\n  \"email\": \"test.user@gym.com\",\n  \"password\": \"password123\",\n  \"firstName\": \"Test\",\n  \"lastName\": \"User\",\n  \"phone\": \"+56999999999\",\n  \"role\": \"RECEPTIONIST\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Crear un nuevo usuario del sistema (empleado/administrador).\n\n**Campos obligatorios:**\n- username, email, password, firstName, lastName, role\n\n**Roles disponibles:**\n- `ADMIN`: Administrador del sistema\n- `MANAGER`: Manager/Gerente\n- `RECEPTIONIST`: Recepcionista\n\n**Campos opcionales:**\n- phone"
					},
					"response": []
				},
				{
					"name": "üìã Obtener Todos los Usuarios",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Obtener lista de todos los usuarios del sistema.\n\nIncluye tanto usuarios activos como inactivos."
					},
					"response": []
				},
				{
					"name": "‚úÖ Obtener Usuarios Activos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/active",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"active"
							]
						},
						"description": "Obtener lista de usuarios activos √∫nicamente.\n\n√ötil para obtener solo los empleados que est√°n actualmente trabajando."
					},
					"response": []
				},
				{
					"name": "üë§ Obtener Usuario por ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"1"
							]
						},
						"description": "Obtener informaci√≥n detallada de un usuario espec√≠fico por su ID.\n\n**Par√°metros:**\n- **id:** ID √∫nico del usuario"
					},
					"response": []
				},
				{
					"name": "üîë Obtener Usuario por Username",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/username/admin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"username",
								"admin"
							]
						},
						"description": "Buscar un usuario espec√≠fico por su username.\n\n**Par√°metros:**\n- **username:** Username √∫nico del usuario"
					},
					"response": []
				},
				{
					"name": "üìß Obtener Usuario por Email",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/email/admin@gym.com",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"email",
								"admin@gym.com"
							]
						},
						"description": "Buscar un usuario espec√≠fico por su email.\n\n**Par√°metros:**\n- **email:** Email √∫nico del usuario"
					},
					"response": []
				},
				{
					"name": "‚úèÔ∏è Actualizar Usuario",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"Nombre Actualizado\",\n  \"lastName\": \"Apellido Actualizado\",\n  \"phone\": \"+56888888888\",\n  \"role\": \"MANAGER\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"1"
							]
						},
						"description": "Actualizar informaci√≥n de un usuario existente.\n\n**Nota:** Solo se actualizan los campos enviados (actualizaci√≥n parcial).\n\n**Campos actualizables:**\n- username, email, password, firstName, lastName, phone, role, isActive\n\n**Par√°metros:**\n- **id:** ID del usuario a actualizar"
					},
					"response": []
				},
				{
					"name": "üö´ Desactivar Usuario",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/1/deactivate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"1",
								"deactivate"
							]
						},
						"description": "Desactivar un usuario del sistema.\n\nEsto cambia el estado a `isActive = false` sin eliminar el usuario.\n\n**Par√°metros:**\n- **id:** ID del usuario a desactivar"
					},
					"response": []
				},
				{
					"name": "‚úÖ Activar Usuario",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/1/activate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"1",
								"activate"
							]
						},
						"description": "Activar un usuario del sistema.\n\nEsto cambia el estado a `isActive = true`.\n\n**Par√°metros:**\n- **id:** ID del usuario a activar"
					},
					"response": []
				},
				{
					"name": "üóëÔ∏è Eliminar Usuario",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"1"
							]
						},
						"description": "Eliminar completamente un usuario del sistema.\n\n**‚ö†Ô∏è CUIDADO:** Esta es una eliminaci√≥n f√≠sica permanente.\n\n**Par√°metros:**\n- **id:** ID del usuario a eliminar"
					},
					"response": []
				}
			],
			"description": "Operaciones CRUD para la gesti√≥n de usuarios del sistema (empleados y administradores)",
			"event": []
		},
		{
			"name": "üîç Users - B√∫squeda y Filtros",
			"item": [
				{
					"name": "üé≠ Obtener Usuarios por Rol",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/role/ADMIN",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"role",
								"ADMIN"
							]
						},
						"description": "Obtener todos los usuarios con un rol espec√≠fico.\n\n**Roles disponibles:**\n- `ADMIN`: Administradores\n- `MANAGER`: Managers/Gerentes\n- `RECEPTIONIST`: Recepcionistas\n\n**Par√°metros:**\n- **role:** Rol a filtrar (ADMIN, MANAGER, RECEPTIONIST)"
					},
					"response": []
				},
				{
					"name": "üé≠‚úÖ Obtener Usuarios Activos por Rol",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/role/MANAGER/active",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"role",
								"MANAGER",
								"active"
							]
						},
						"description": "Obtener usuarios activos con un rol espec√≠fico.\n\nCombina filtros por rol y estado activo.\n\n**Par√°metros:**\n- **role:** Rol a filtrar (ADMIN, MANAGER, RECEPTIONIST)"
					},
					"response": []
				},
				{
					"name": "üîç Buscar Usuarios",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/search?q=admin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "admin",
									"description": "T√©rmino de b√∫squeda"
								}
							]
						},
						"description": "Buscar usuarios por m√∫ltiples campos.\n\nLa b√∫squeda es **case-insensitive** y busca coincidencias parciales en:\n- firstName\n- lastName\n- username\n- email\n\n**Par√°metros:**\n- **q:** T√©rmino de b√∫squeda"
					},
					"response": []
				}
			],
			"description": "Endpoints para b√∫squeda y filtrado de usuarios del sistema",
			"event": []
		},
		{
			"name": "‚úÖ Users - Validaciones",
			"item": [
				{
					"name": "üîç Verificar Username Existe",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/exists/username/admin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"exists",
								"username",
								"admin"
							]
						},
						"description": "Verificar si un username ya est√° en uso.\n\nRetorna `true` si existe, `false` si est√° disponible.\n\n√ötil para validaciones en tiempo real en formularios.\n\n**Par√°metros:**\n- **username:** Username a verificar"
					},
					"response": []
				},
				{
					"name": "üìß Verificar Email Existe",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/exists/email/admin@gym.com",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"exists",
								"email",
								"admin@gym.com"
							]
						},
						"description": "Verificar si un email ya est√° en uso.\n\nRetorna `true` si existe, `false` si est√° disponible.\n\n√ötil para validaciones en tiempo real en formularios.\n\n**Par√°metros:**\n- **email:** Email a verificar"
					},
					"response": []
				}
			],
			"description": "Endpoints para validaciones de usuarios (verificar duplicados)",
			"event": []
		},
		{
			"name": "üîç Members - B√∫squeda y Filtros",
			"item": [
				{
					"name": "üìß Buscar Miembro por Email",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/members/email/juan.perez@email.com",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"members",
								"email",
								"juan.perez@email.com"
							]
						},
						"description": "Buscar un miembro espec√≠fico por su direcci√≥n de email.\n\n**Par√°metros:**\n- **email:** Direcci√≥n de email del miembro"
					},
					"response": []
				},
				{
					"name": "üë• Buscar Miembros por Nombre",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/members/search?name=Juan",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"members",
								"search"
							],
							"query": [
								{
									"key": "name",
									"value": "Juan",
									"description": "T√©rmino de b√∫squeda (busca en firstName y lastName)"
								}
							]
						},
						"description": "Buscar miembros por nombre o apellido.\n\nLa b√∫squeda es **case-insensitive** y busca coincidencias parciales en firstName y lastName.\n\n**Par√°metros:**\n- **name:** T√©rmino de b√∫squeda"
					},
					"response": []
				},
				{
					"name": "‚úÖ Obtener Miembros Activos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/members/active",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"members",
								"active"
							]
						},
						"description": "Obtener lista de todos los miembros activos (isActive = true).\n\n√ötil para obtener solo los miembros que est√°n actualmente activos en el gimnasio."
					},
					"response": []
				}
			],
			"description": "Endpoints para b√∫squeda y filtrado de miembros (clientes)",
			"event": []
		},
		{
			"name": "üìä Members - Estad√≠sticas y Monitoreo",
			"item": [
				{
					"name": "üìà Estad√≠sticas de Miembros",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/members/stats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"members",
								"stats"
							]
						},
						"description": "Obtener estad√≠sticas generales de miembros.\n\n**Informaci√≥n incluida:**\n- Total de miembros\n- Miembros activos\n- Miembros inactivos\n\n√ötil para dashboards y reportes."
					},
					"response": []
				},
				{
					"name": "üíö Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/members/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"members",
								"health"
							]
						},
						"description": "Verificar que el servicio de miembros est√° funcionando correctamente.\n\nRetorna un mensaje simple confirmando que la API est√° activa."
					},
					"response": []
				}
			],
			"description": "Endpoints para estad√≠sticas y monitoreo de miembros",
			"event": []
		},
		{
			"name": "üóÑÔ∏è Base de Datos y Sistema",
			"item": [
				{
					"name": "üîç H2 Console",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/h2-console",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"h2-console"
							]
						},
						"description": "Acceder a la consola H2 para inspecci√≥n directa de la base de datos.\n\n**Credenciales:**\n- **JDBC URL:** jdbc:h2:mem:gymdb\n- **Usuario:** root\n- **Contrase√±a:** root\n\n**Nota:** Solo disponible en perfil de desarrollo"
					},
					"response": []
				},
				{
					"name": "‚ö° Actuator Health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/actuator/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actuator",
								"health"
							]
						},
						"description": "Verificar el estado general de la aplicaci√≥n.\n\nMonitorea:\n- Estado de la base de datos\n- Espacio en disco\n- Estado general de la aplicaci√≥n"
					},
					"response": []
				},
				{
					"name": "üìä Actuator Metrics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/actuator/metrics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actuator",
								"metrics"
							]
						},
						"description": "Obtener lista de m√©tricas disponibles del sistema.\n\nIncluye m√©tricas de:\n- JVM\n- Base de datos\n- HTTP requests\n- Memoria y CPU"
					},
					"response": []
				}
			],
			"description": "Endpoints para acceso a herramientas del sistema y base de datos",
			"event": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
} 